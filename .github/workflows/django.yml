name: Django CI

on:
  push:
    branches:
      - main  # Runs tests on pushes to the main branch
  pull_request:
    branches:
      - main  # Runs tests for pull requests targeting the main branch

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: codelydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Use the Python version your project supports

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations
      env:
        DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: Run tests
      env:
        DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
      run: |
        python manage.py test

  deploy:
       needs: test
       runs-on: ubuntu-latest
       if: ${{ always() }}  # Always run the deployment job, even if tests fail
       steps:
        - name: Checkout repository
          uses: actions/checkout@v2
  
        - name: Deploy Application
          run: |
            echo "Deploying the application..." # Replace this with actual deployment commands
